syntax = "proto3";

package projects;

message Void {}

message Bool {
    bool bool = 1;
}

message UsersIds {
    repeated string usersIds = 1;
}

message Project {
    string id = 1;
    string name = 2;
    string leadId = 3;
}

message ProjectByIdRequest {
    string projectId = 1;
}

message ProjectsByUserIdRequest {
    string userId = 1;
}

message ProjectsByLeadIdRequest {
    string leadId = 1;
}

message CreateProjectRequest {
    string leadId = 1;
    string name = 2;
}

message UpdateProjectRequest {
    string projectId = 1;
    optional string leadId = 2;
    optional string name = 3;   
}

message DeleteProjectRequest {
    string projectId = 1;
}

message ProjectIdAndUserId {
    string projectId = 1;
    string userId = 2;
}

service ProjectsService {
    rpc getProjectById(ProjectByIdRequest) returns (Project) {}
    rpc getProjectsByUserId(ProjectsByUserIdRequest) returns (stream Project) {}
    rpc getProjectsByLeadId(ProjectsByLeadIdRequest) returns (stream Project) {}
    rpc getMutualProjectsByUsersIds(UsersIds) returns (stream Project) {}
    rpc isUserProjectPerticipant(ProjectIdAndUserId) returns (Bool) {}
    rpc createProject(CreateProjectRequest) returns (Project) {}
    rpc updateProject(UpdateProjectRequest) returns (Project) {}
    rpc deleteProject(DeleteProjectRequest) returns (Project) {}
    rpc addUserToProject(ProjectIdAndUserId) returns (Void) {}
    rpc removeUserFromProject(ProjectIdAndUserId) returns (Void) {}
}

message Invite {
    string id = 1;
    string userId = 2;
    string projectId = 3;
}

message InviteByIdRequest {
    string inviteId = 1;
}

message InvitesByUserIdRequest {
    string userId = 1;
}

message InvitesByProjectIdRequest {
    string projectId = 1;
}

message CreateInviteRequest {
    string projectId = 1;
    string userId = 2;
}

message DeleteInviteByIdRequest {
    string inviteId = 1;
}

message DeleteInviteByUserIdAndProjectIdRequest {
    string projectId = 1;
    string userId = 2;
}

service InvitesService {
    rpc getInviteById(InviteByIdRequest) returns (Invite) {}
    rpc getInvitesByUserId(InvitesByUserIdRequest) returns (stream Invite) {}
    rpc getInvitesByProjectId(InvitesByProjectIdRequest) returns (stream Invite) {}
    rpc createInvite(CreateInviteRequest) returns (Invite) {}
    rpc deleteInviteById(DeleteInviteByIdRequest) returns (Invite) {}
    rpc deleteInviteByUserIdAndProjectId(DeleteInviteByUserIdAndProjectIdRequest) returns (Invite) {}
}