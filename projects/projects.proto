syntax = "proto3";

package projects;

message Void {}

message Bool {
    bool bool = 1;
}

message Project {
    string id = 1;
    string name = 2;
    string leadId = 3;
}

message ProjectId {
    string projectId = 1;
}

message SearchProjectsParams {
    optional string leadId = 1;
    optional string projectName = 2;
    repeated string usersIds = 3;
    repeated string projectsIds = 4;
    optional int32 limit = 5;
    optional int32 offset = 6;
}

message UserId {
    string userId = 1;
}

message CreateProjectRequest {
    string leadId = 1;
    string name = 2;
}

message UpdateProjectRequest {
    string projectId = 1;
    optional string leadId = 2;
    optional string name = 3;   
}
message ProjectIdAndUserId {
    string projectId = 1;
    string userId = 2;
}

service ProjectsService {
    rpc getProjectById(ProjectId) returns (Project) {}
    rpc searchProjects(SearchProjectsParams) returns (stream Project) {}
    rpc isUserProjectParticipant(ProjectIdAndUserId) returns (Bool) {}
    rpc createProject(CreateProjectRequest) returns (Project) {}
    rpc updateProject(UpdateProjectRequest) returns (Project) {}
    rpc deleteProject(ProjectId) returns (Project) {}
    rpc addUserToProject(ProjectIdAndUserId) returns (Void) {}
    rpc removeUserFromProject(ProjectIdAndUserId) returns (Void) {}
}

message Invite {
    string id = 1;
    string userId = 2;
    string projectId = 3;
}

message InviteId {
    string inviteId = 1;
}

message DeleteInviteRequest {
    oneof data {
        ProjectIdAndUserId projectIdAndUserId = 1;
        string inviteId = 2;
    }
}

message SearchInvitesParams {
    optional string userId = 1;
    optional string projectId = 2;
    repeated string invitesIds = 3;
    optional int32 limit = 4;
    optional int32 offset = 5;
}

service InvitesService {
    rpc getInviteById(InviteId) returns (Invite) {}
    rpc searchInvites(SearchInvitesParams) returns (stream Invite) {}
    rpc createInvite(ProjectIdAndUserId) returns (Invite) {}
    rpc deleteInvite(DeleteInviteRequest) returns (Invite) {}
}