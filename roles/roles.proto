syntax = "proto3";

package roles;

message Void {}

message Role {
    string id = 1;
    string projectId = 2;
    string name = 3;
}
message RoleByNameRequest {
    string roleName = 1;
}

message CreateRoleRequest {
    string projectId = 1;
    string name = 2;
}

message RoleIdAndName {
    string roleId = 1;
    string name = 2;
}

message RoleId {
    string roleId = 1;
}

message UserId {
    string userId = 1;
}

message UserIdAndProjectId {
    string userId = 1;
    string projectId = 2;
}

message ProjectId {
    string projectId = 1;
}

message RoleIdAndUserId {
    string roleId = 1;
    string userId = 2;
}

service RolesService {
    rpc getRoleById(RoleId) returns (Role) {}
    rpc getRoleByName(RoleByNameRequest) returns (Role) {}
    rpc getRolesByUserIdAndProjectId(UserIdAndProjectId) returns (stream Role) {}
    rpc getRolesByProjectId(ProjectId) returns (stream Role) {}
    rpc getUsersIdsByRoleId(RoleId) returns (stream UserId) {}
    rpc createRole(CreateRoleRequest) returns (Role) {}
    rpc updateRole(RoleIdAndName) returns (Role) {}
    rpc deleteRole(RoleId) returns (Role) {}
    rpc addRoleToUser(RoleIdAndUserId) returns (Void) {}
    rpc removeRoleFromUser(RoleIdAndUserId) returns (Void) {}
}

message Permission {
    int32 id = 1;
    string name = 2;
}

message PermissionId {
    int32 permissionId = 1;
}

message PermissionIdAndUserId {
    int32 permissionId = 1;
    string userId = 2;
}

message PermissionIdAndRoleId {
    int32 permissionId = 1;
    string roleId = 2;
}

service PermissionsService {
    rpc getPermissionById(PermissionId) returns (Permission) {}
    rpc getPermissionsByUserIdAndProjectId(UserIdAndProjectId) returns (stream Permission) {}
    rpc getPermissionsByRoleId(RoleId) returns (stream Permission) {}
    rpc addPermissionToUser(PermissionIdAndUserId) returns (Void) {}
    rpc addPermissionToRole(PermissionIdAndRoleId) returns (Void) {}
    rpc removePermissionFromUser(PermissionIdAndUserId) returns (Void) {}
    rpc removePermissionFromRole(PermissionIdAndRoleId) returns (Void) {}
}