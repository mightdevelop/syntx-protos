syntax = "proto3";

package roles;

message Void {}

message Role {
    string id = 1;
    string projectId = 2;
    string name = 3;
}

message CreateRoleRequest {
    string projectId = 1;
    string name = 2;
}

message RoleIdAndName {
    string roleId = 1;
    string name = 2;
}

message RoleId {
    string roleId = 1;
}

message UserId {
    string userId = 1;
}

message UserIdAndProjectId {
    string userId = 1;
    string projectId = 2;
}

message RoleIdAndUserId {
    string roleId = 1;
    string userId = 2;
}

message SearchRolesParams {
    optional string userId = 1;
    optional string projectId = 2;
    optional string name = 3;
    repeated string rolesIds = 4;
    optional int32 limit = 5;
}

service RolesService {
    rpc getRoleById(RoleId) returns (Role) {}
    rpc searchRoles(SearchRolesParams) returns (Role) {}
    rpc getUsersIdsByRoleId(RoleId) returns (stream UserId) {}
    rpc createRole(CreateRoleRequest) returns (Role) {}
    rpc updateRole(RoleIdAndName) returns (Role) {}
    rpc deleteRole(RoleId) returns (Role) {}
    rpc addRoleToUser(RoleIdAndUserId) returns (Void) {}
    rpc removeRoleFromUser(RoleIdAndUserId) returns (Void) {}
}

message Permission {
    int32 id = 1;
    string name = 2;
}

message PermissionId {
    int32 permissionId = 1;
}

message PermissionsIdsAndUserIdAndProjectId {
    repeated int32 permissionsIds = 1;
    string userId = 2;
    string projectId = 3;
}

message PermissionsIdsAndRoleId {
    repeated int32 permissionsIds = 1;
    string roleId = 2;
}

message Bool {
    bool bool = 1;
}

message SearchPermissionsParams {
    oneof params {
        UserIdAndProjectId userIdAndProjectId = 1;
        string roleId = 2;
    }
    repeated int32 permissionsIds = 3;
    optional int32 limit = 4;
}

service PermissionsService {
    rpc getPermissionById(PermissionId) returns (Permission) {}
    rpc searchPermissions(SearchPermissionsParams) returns (stream Permission) {}
    rpc addPermissionsToUserInProject(PermissionsIdsAndUserIdAndProjectId) returns (Void) {}
    rpc addPermissionsToRole(PermissionsIdsAndRoleId) returns (Void) {}
    rpc removePermissionsFromUserInProject(PermissionsIdsAndUserIdAndProjectId) returns (Void) {}
    rpc removePermissionsFromRole(PermissionsIdsAndRoleId) returns (Void) {}
}