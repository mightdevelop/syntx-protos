syntax = "proto3";

package projects;

message Void {}

message Board {
    string id = 1;
    string projectId = 2;
}

message BoardId {
    string boardId = 1;
}

message ProjectId {
    string projectId = 1;
}

message ProjectIdAndUserId {
    string projectId = 1;
    string userId = 2;
}

service BoardsService {
    rpc getBoardById(BoardId) returns (Board) {}
    rpc getBoardByProjectId(ProjectId) returns (Board) {}
    rpc createBoard(ProjectId) returns (Board) {}
    rpc deleteBoard(BoardId) returns (Board) {}
}

message Column {
    string id = 1;
    string name = 2;
}

message Columns {
    repeated Column columns = 1;
}

message ColumnId {
    string columnId = 1;
}

message ColumnName {
    string columnName = 1;
}

message UpdateColumnRequest {
    string columnId = 1;
    string name = 2;
}

service ColumnsService {
    rpc getColumnById(ColumnId) returns (Column) {}
    rpc getColumnsByBoardId(BoardId) returns (Columns) {}
    rpc createColumn(ColumnName) returns (Column) {}
    rpc updateColumn(UpdateColumnRequest) returns (Column) {}
    rpc deleteColumn(ColumnId) returns (Column) {}
}

message Issue {
    string id = 1;
    string boardId = 2;
    string columnId = 3;
}

message InviteByIdRequest {
    string inviteId = 1;
}

message CreateIssueRequest {
    string boardId = 1;
    string title = 2;
    string body = 3;
}

message UpdateIssueRequest {
    string issueId = 1;
    optional string title = 2;
    optional string body = 3;
    optional string columnId = 4;
}

message IssueId {
    string issueId = 1;
}

service IssuesService {
    rpc getIssueById(IssueId) returns (Issue) {}
    rpc getIssuesByBoardId(BoardId) returns (stream Issue) {}
    rpc getIssuesByColumnId(BoardId) returns (stream Issue) {}
    rpc createIssue(CreateIssueRequest) returns (Issue) {}
    rpc updateIssue(UpdateIssueRequest) returns (Issue) {}
    rpc deleteIssueById(IssueId) returns (Issue) {}
}