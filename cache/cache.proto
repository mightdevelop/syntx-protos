syntax = "proto3";

package cache;

import "google/protobuf/any.proto";

message Void {}

message Cache {
    string data = 1;
}

message CacheKey {
    string packageName = 1;
    string rpcMethod = 2;
    string rpcArg = 3;
}

message SetCacheRequest {
    CacheKey key = 1;
    repeated google.protobuf.Any data = 2;
    optional int32 ttl = 3;
}

service CacheService {
    rpc getCacheByKey(CacheKey) returns (Cache) {}
    rpc setCacheByKey(SetCacheRequest) returns (Void) {}
}

message DoesUserHavePermissionRequest {
    string userId = 1;
    string projectId = 2;
    int32 permissionId = 3;
}

message AddRolePermissionsToUserRequest {
    string userId = 1;
    string projectId = 2;
    optional string roleId = 3;
    int32 permissionId = 4;
}

message RemovePermissionsFromRoleRequest {
    string roleId = 1;
    repeated int32 permissionsIds = 2;
}

message Bool {
    optional bool bool = 1;
}

service PermissionsCacheService {
    rpc doesUserHavePermission(DoesUserHavePermissionRequest) returns (Bool) {}
    rpc addPermissionToUserInProject(AddRolePermissionsToUserRequest) returns (Void) {}
    rpc removePermissionsFromRole(RemovePermissionsFromRoleRequest) returns (Void) {}
}