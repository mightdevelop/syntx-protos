syntax = "proto3";

package eventbus;

import "google/protobuf/empty.proto";
import "common.proto";

message Role {
    optional string id = 1;
    optional string projectId = 2;
    optional string name = 3;
}

message RoleIdAndUserId {
    optional Error error = 1;
    string roleId = 2;
    string userId = 3;
}

message RoleEvent {
    optional Error error = 1;
    Role role = 2;
}

message SearchRolesParams {
    optional string userId = 1;
    optional string projectId = 2;
    optional string name = 3;
    repeated string rolesIds = 4;
    optional int32 limit = 5;
}

message SearchRolesEvent {
    optional Error error = 1;
    SearchRolesParams searchParams = 2;
    repeated Role roles = 3;
}

service RolesEventsService {
    rpc getRoleByIdEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc searchRolesEvent(SearchRolesEvent) returns (google.protobuf.Empty) {}
    rpc createRoleEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc updateRoleEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc deleteRoleEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc addRoleToUserEvent(RoleIdAndUserId) returns (google.protobuf.Empty) {}
    rpc removeRoleFromUserEvent(RoleIdAndUserId) returns (google.protobuf.Empty) {}
}

message Permission {
    optional int32 id = 1;
    optional string name = 2;
}

message PermissionEvent {
    optional Error error = 1;
    Permission permission = 2;
}

message PermissionsIdsAndUserIdAndProjectId {
    optional Error error = 1;
    repeated int32 permissionsIds = 2;
    string userId = 3;
    string projectId = 4;
}

message PermissionsIdsAndRoleId {
    optional Error error = 1;
    repeated int32 permissionsIds = 2;
    string roleId = 3;
}

message Bool {
    bool bool = 1;
}

message UserIdAndProjectId {
    string userId = 1;
    string projectId = 2;
}

message SearchPermissionsParams {
    oneof params {
        UserIdAndProjectId userIdAndProjectId = 2;
        string roleId = 3;
    }
    repeated int32 permissionsIds = 4;
    optional int32 limit = 5;
}

message SearchPermissionsEvent {
    optional Error error = 1;
    SearchPermissionsParams searchParams = 2;
    repeated Role permissions = 3;
}

service PermissionsEventsService {
    rpc getPermissionByIdEvent(PermissionEvent) returns (Permission) {}
    rpc searchPermissionsEvent(SearchPermissionsEvent) returns (stream Permission) {}
    rpc addPermissionsToUserInProjectEvent(PermissionsIdsAndUserIdAndProjectId) returns (google.protobuf.Empty) {}
    rpc addPermissionsToRoleEvent(PermissionsIdsAndRoleId) returns (google.protobuf.Empty) {}
    rpc removePermissionsFromUserInProjectEvent(PermissionsIdsAndUserIdAndProjectId) returns (google.protobuf.Empty) {}
    rpc removePermissionsFromRoleEvent(PermissionsIdsAndRoleId) returns (google.protobuf.Empty) {}
}