syntax = "proto3";

package eventbus;

import "google/protobuf/empty.proto";

message Error {
    int32 code = 1;
    string message = 2;
}

message Role {
    optional string id = 1;
    optional string projectId = 2;
    optional string name = 3;
}

message RoleIdAndUserId {
    string roleId = 1;
    string userId = 2;
}

message RoleEvent {
    optional Error error = 1;
    Role user = 2;
}

message SearchRolesParams {
    optional string userId = 1;
    optional string projectId = 2;
    optional string name = 3;
    repeated string rolesIds = 4;
    optional int32 limit = 5;
}

message SearchRolesEvent {
    optional Error error = 1;
    SearchRolesParams searchParams = 2;
    repeated Role roles = 3;
}

service RolesEventsService {
    rpc getRoleByIdEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc searchRolesEvent(SearchRolesEvent) returns (google.protobuf.Empty) {}
    rpc createRoleEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc updateRoleEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc deleteRoleEvent(RoleEvent) returns (google.protobuf.Empty) {}
    rpc addRoleToUserEvent(RoleIdAndUserId) returns (google.protobuf.Empty) {}
    rpc removeRoleFromUserEvent(RoleIdAndUserId) returns (google.protobuf.Empty) {}
}

message Permission {
    optional int32 id = 1;
    optional string name = 2;
}

message PermissionsIdsAndUserIdAndProjectId {
    repeated int32 permissionsIds = 1;
    string userId = 2;
    string projectId = 3;
}

message PermissionsIdsAndRoleId {
    repeated int32 permissionsIds = 1;
    string roleId = 2;
}

message Bool {
    bool bool = 1;
}

message UserIdAndProjectId {
    string userId = 1;
    string projectId = 2;
}

message SearchPermissionsParams {
    oneof params {
        UserIdAndProjectId userIdAndProjectId = 1;
        string roleId = 2;
    }
    repeated int32 permissionsIds = 3;
    optional int32 limit = 4;
}

service PermissionsService {
    rpc getPermissionById(Permission) returns (Permission) {}
    rpc searchPermissions(SearchPermissionsParams) returns (stream Permission) {}
    rpc addPermissionsToUserInProject(PermissionsIdsAndUserIdAndProjectId) returns (google.protobuf.Empty) {}
    rpc addPermissionsToRole(PermissionsIdsAndRoleId) returns (google.protobuf.Empty) {}
    rpc removePermissionsFromUserInProject(PermissionsIdsAndUserIdAndProjectId) returns (google.protobuf.Empty) {}
    rpc removePermissionsFromRole(PermissionsIdsAndRoleId) returns (google.protobuf.Empty) {}
}